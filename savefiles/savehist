;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(query-replace-history file-name-history ido-buffer-history command-history minibuffer-history extended-command-history ido-file-history))
(setq query-replace-history '("luca-auto-save-command" "prelude-auto-save-command" "prelude-auto-save-command"))
(setq file-name-history '("/Users/lucas/.emacs.d/core/global-keybindings.el" "/Users/lucas/dev/learning/ruby/koans/about_regular_expressions.rb" "~/dev/learning/ruby/kata/string_calculator_kata_spec.rb" "/Users/lucas/.emacs.d/defuns/general.el" "/Users/lucas/dev/learning/ruby/kata/string_calculator_kata.rb" "/Users/lucas/dev/learning/ruby/kata/two_spec.rb" "/Users/lucas/.emacs.d/modes/ace-jump-mode.el" "/Users/lucas/.emacs.d/modes/nxhtml-mode.el" "/Users/lucas/.emacs.d/defuns/general.el" "/Users/lucas/.emacs.d/core/global-keybindings.el" "/Users/lucas/.emacs.d/init.el" "/Users/lucas/.emacs.d/defuns/general.el" "/Users/lucas/.emacs.d/core/global-keybindings.el" "/Users/lucas/.emacs.d/defuns/general.el" "/Users/lucas/.emacs.d/core/wordkarounds.el" "~/.emacs.d/core/global-keybindings.el" "~/.emacs.d/core/luca-global-keybindings.el" "/Users/lucas/.emacs.d/core/mode-mappings.el" "/Users/lucas/.emacs.d/init.el"))
(setq ido-buffer-history '("about_regular_expressions.rb" "*ruby*" "string_calculator_kata_spec.rb" "about_regular_expressions.rb" "*ruby*" "string_calculator_kata_spec.rb" "*ruby*" "*unsent mail*" "string_calculator_kata.rb" "two_spec.rb" "string_calculator_kata.rb" "two_spec.rb" "string_calculator_kata.rb" "two_spec.rb" "string_calculator_kata.rb" "init.el" "two_spec.rb" "init.el" "two_spec.rb" "global-keybindings.el" "init.el" "general.el" "ace-jump-mode.el" "init.el" "nxhtml-mode.el" "init.el" "nxhtml-mode.el" "init.el" "nxhtml-mode.el" "init.el"))
(setq command-history '((switch-to-buffer "about_regular_expressions.rb") (switch-to-buffer "*ruby*") (ace-jump-word-mode 47) (switch-to-buffer "string_calculator_kata_spec.rb") (describe-key-briefly [C-right] nil 1) (describe-key-briefly [C-down] nil 1) (switch-to-buffer "about_regular_expressions.rb") (switch-to-buffer "*ruby*") (switch-to-buffer "string_calculator_kata_spec.rb") (eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region") (ace-jump-word-mode 67) (find-file "/Users/lucas/.emacs.d/core/global-keybindings.el") (find-file "/Users/lucas/dev/learning/ruby/koans/about_regular_expressions.rb") (ace-jump-word-mode 101) (switch-to-buffer "*ruby*") (kill-buffer "*unsent mail*") (rename-this-buffer-and-file) (execute-extended-command nil "rename-this-buffer-and-file") (switch-to-buffer "string_calculator_kata.rb") (eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region") (find-file "/Users/lucas/.emacs.d/defuns/general.el") (switch-to-buffer "string_calculator_kata.rb") (switch-to-buffer "two_spec.rb") (switch-to-buffer "string_calculator_kata.rb") (switch-to-buffer "two_spec.rb") (switch-to-buffer "string_calculator_kata.rb") (switch-to-buffer "two_spec.rb") (switch-to-buffer "string_calculator_kata.rb") (eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region") (switch-to-buffer "init.el")))
(setq minibuffer-history '("find-tag" "hippie-expand" "find-variable" "find-library" "find-variable" "luca-lib-dir" "find-variable" "luca-auto-save-command" "find-function" "defun" "find-tag" "upcase-word" "downcase-word" "beginning-of-buffer" "move-to" "jump-to" "start*buffer" "replace" "drag-stuff" "quoted-insert" "move-beginning-of-line" "kill-line" "kill-current-line" "eval-region" "command-history" "init" "savehist"))
(setq extended-command-history '("eval-region" "rename-this-buffer-and-file" "eval-region" "inf-ruby" "eval-region" "hippie-expand" "find-library" "find-variable" "find-function" "auto-save-mode" "eval-region" "ido-dired" "eval-region" "query-replace-regexp" "eval-region" "clear-rectangle" "package-install" "eval-region" "electric-pair-mode" "eval-region" "command-history" "repeat-matching-complex-command"))
(setq ido-file-history '("global-keybindings.el" "about_regular_expressions.rb" "general.el" "string_calculator_kata.rb" "two_spec.rb" "ace-jump-mode.el" "nxhtml-mode.el" "general.el" "global-keybindings.el" "init.el" "general.el" "global-keybindings.el" nil "general.el" nil "wordkarounds.el" "core/" "mode-mappings.el" "core/" "init.el" "luca-ui.el" "wordkarounds.el" "core/" "init.el" "general.el" "init.el"))
(setq regexp-search-ring 'nil)
